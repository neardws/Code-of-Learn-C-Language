// 3528:最小新整数
// http://noi.openjudge.cn/ch0406/3528/
// 总时间限制: 1000ms 内存限制: 65536kB
// 描述
// 给定一个十进制正整数n(0 < n < 1000000000)，每个数位上数字均不为0。n的位数为m。
// 现在从m位中删除k位(0<k < m)，求生成的新整数最小为多少？
// 例如: n = 9128456, k = 2, 则生成的新整数最小为12456

// 输入
// 第一行t, 表示有t组数据；
// 接下来t行，每一行表示一组测试数据，每组测试数据包含两个数字n, k。
// 输出
// t行，每行一个数字，表示从n中删除k位后得到的最小整数。
// 样例输入
// 2
// 9128456 2
// 1444 3
// 样例输出
// 12456
// 1


// 1.先从头开始找出一个不下降序列。
// 2.删除这个不下降序列的最后一位。
// 3.重复执行。
// 所以9128456的执行过程是这样的：
// 最长不下降序列为9->去掉9->原序列变为128456->最长不下降序列为128
// ->去掉8->原序列为128456->已经去掉了2位数->输出12456


#include<bits/stdc++.h>
using namespace std;
int main()
{
	string s;
	int k,len,i,n;
	cin>>n;
	for(int L=0;L<n;L++)
	{
		cin>>s>>k;
		len=s.length();
		while(k--)
			for(i=0;i<len;i++)
				if(s[i+1]<s[i]) {s.erase(i,1);break;}
		cout<<s<<endl;
	}
	return 0;
}
