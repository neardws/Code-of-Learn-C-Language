// 1760:菲波那契数列(2)
// 总时间限制: 1000ms 内存限制: 65536kB
// 描述
// 菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。 
// 给出一个正整数a，要求菲波那契数列中第a个数对1000取模的结果是多少。

// 输入
// 第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1 <= a <= 1000000)。
// 输出
// n行，每行输出对应一个输入。输出应是一个正整数，为菲波那契数列中第a个数对1000取模得到的结果。
// 样例输入
// 4
// 5
// 2
// 19
// 1
// 样例输出
// 5
// 1
// 181
// 1

// 注意与之前题目的区别：a的取值范围变大了，同时，输出结果要对1000取模。
// a的取值范围变大后，需要考虑int 数据是否能存储所有情况。
// 所以，我们需要重写递推式，在递推式中对1000取模，确保结果不会超过int的范围。

#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    int a[1000001];
    a[1]=1;
    a[2]=1;
    for(int i=3;i<=1000000;i++){
        a[i]= (a[i-1]+a[i-2]) % 1000;
    }
    while(n--){
        int b;
        cin>>b;
        cout<<a[b]<<endl;
    }
    return 0;
}