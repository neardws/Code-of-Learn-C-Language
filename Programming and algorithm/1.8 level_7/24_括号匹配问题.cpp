// 扩号匹配问题
// 在某个字符串（长度不超过100）中有左括号、右括号和大小写字母；规定（与常见的算数式子一样）任何一个左括号都从内到外与在它右边且距离最近的右括号匹配。写一个程序，找到无法匹配的左括号和右括号，输出原来字符串，并在下一行标出不能匹配的括号。不能匹配的左括号用"$"标注,不能匹配的右括号用"?"标注.
// 时间限制：3000
// 内存限制：65536
// 输入
// 输入包括多组数据，每组数据一行，包含一个字符串，只包含左右括号和大小写字母，字符串长度不超过100
// 输出
// 对每组输出数据，输出两行，第一行包含原始输入字符，第二行由"$","?"和空格组成，"$"和"?"表示与之对应的左括号和右括号不能匹配。
// 样例输入
// ((ABCD(x)
// )(rttyy())sss)(
// 样例输出
// ((ABCD(x)
// $$
// )(rttyy())sss)(
// ?            ?$

// 解题思路：

// 1.使用栈来存储括号，遇到左括号就入栈，遇到右括号就出栈。
// 2.如果遇到右括号时，栈为空，则说明该右括号无法匹配。
// 3.如果遍历完字符串后，栈不为空，则说明栈中剩余的左括号无法匹配。
// 4.最后，遍历整个字符串，标记无法匹配的左括号和右括号。


#include<bits/stdc++.h>
using namespace std;
int main()
{
    string s;
    while(cin>>s)//输入字符串
    {
        int len=s.length();
        stack<int>st;//定义一个栈
        int flag=0;
        for(int i=0;i<len;i++)
        {
            if(s[i]=='(')
                st.push(i);//如果是左括号，入栈
            if(s[i]==')')
            {
                if(st.empty())//如果栈为空，说明有不匹配的右括号
                {
                    flag=i;
                    break;
                }
                else
                    st.pop();//栈不为空，说明左右括号匹配，弹出栈顶
            }
        }
        cout<<s<<endl;
        for(int i=0;i<len;i++)
        {
            if(i==flag)
                cout<<"?";//输出不匹配的右括号
            else if(!st.empty()&&st.top()==i)
            {
                cout<<"$";//输出不匹配的左括号
                st.pop();
            }
            else
                cout<<" ";//其他位置输出空格
        }
        cout<<endl;
    }
    return 0;
}
